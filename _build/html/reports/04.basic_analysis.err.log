Traceback (most recent call last):
  File "/opt/homebrew/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/homebrew/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/fedor/Library/Python/3.11/lib/python/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.11/3.11.4_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/homebrew/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/homebrew/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/homebrew/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
f = lambda x: -4*x**3+5*x+1
g = lambda x: -12*x**2+5
x = newton(f,g,x0=-2.5,maxiter=7)
print('Solution is x=%1.3f, f(x)=%1.12f' % (x,f(x)))

def newton(fun,grad,x0,tol=1e-6,maxiter=100,callback=None):
    '''Newton method for solving equation f(x)=0
    with given tolerance and number of iterations.
    Callback function is invoked at each iteration if given.
    '''
    for i in range(maxiter):
        x1 = x0 - fun(x0)/grad(x0)
        err = abs(x1-x0)
        if callback != None: callback(err=err,x0=x0,x1=x1,iter=i)
        if err<tol: break
        x0 = x1
    else:
        raise RuntimeError('Failed to converge in %d iterations'%maxiter)
    return (x0+x1)/2

def print_err(iter,err,**kwargs):
    x = kwargs['x'] if 'x' in kwargs.keys() else kwargs['x0']
    print('{:4d}:  x = {:17.14f}  err = {:8.6e}'.format(iter,x,err))

print('Newton method')
newton(f,g,x0=-2.5,callback=print_err,tol=1e-10)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[3], line 3[0m
[1;32m      1[0m f [38;5;241m=[39m [38;5;28;01mlambda[39;00m x: [38;5;241m-[39m[38;5;241m4[39m[38;5;241m*[39mx[38;5;241m*[39m[38;5;241m*[39m[38;5;241m3[39m[38;5;241m+[39m[38;5;241m5[39m[38;5;241m*[39mx[38;5;241m+[39m[38;5;241m1[39m
[1;32m      2[0m g [38;5;241m=[39m [38;5;28;01mlambda[39;00m x: [38;5;241m-[39m[38;5;241m12[39m[38;5;241m*[39mx[38;5;241m*[39m[38;5;241m*[39m[38;5;241m2[39m[38;5;241m+[39m[38;5;241m5[39m
[0;32m----> 3[0m x [38;5;241m=[39m [43mnewton[49m(f,g,x0[38;5;241m=[39m[38;5;241m-[39m[38;5;241m2.5[39m,maxiter[38;5;241m=[39m[38;5;241m7[39m)
[1;32m      4[0m [38;5;28mprint[39m([38;5;124m'[39m[38;5;124mSolution is x=[39m[38;5;132;01m%1.3f[39;00m[38;5;124m, f(x)=[39m[38;5;132;01m%1.12f[39;00m[38;5;124m'[39m [38;5;241m%[39m (x,f(x)))
[1;32m      6[0m [38;5;28;01mdef[39;00m [38;5;21mnewton[39m(fun,grad,x0,tol[38;5;241m=[39m[38;5;241m1e-6[39m,maxiter[38;5;241m=[39m[38;5;241m100[39m,callback[38;5;241m=[39m[38;5;28;01mNone[39;00m):

[0;31mNameError[0m: name 'newton' is not defined

